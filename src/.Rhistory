}
#Map of lambda
{
out.lam<-out.sum[grep("lam",rownames(out.sum)),]
plotvar<-out.lam[,1]
plotclr <- brewer.pal(nclr,"YlOrBr")
class <- classIntervals(plotvar, nclr, dataPrecision=2,style="quantile")
colcode <- findColours(class,plotclr)
covid.map <- sps
jpeg(paste0("../results/", model_id, "/predicted_smr.jpeg"), res = 65)
plot(covid.map, col = colcode)
legend(x_etiquetas, y_etiquetas, legend = names(attr(colcode, "table")),
fill = attr(colcode, "palette"), cex=1, bty="n")
text(mean_coords$x, mean_coords$y, mean_coords$Country)
text(mean_coords$x, mean_coords$y-3, plotvar |> round(2))
plot_arrows(region)
title(main="Smoothed SMR")
dev.off()
}
rho_weight <- 70 # Elegir del 0 al 100
rho <- (rho_weight/100) * (1 / max_eigen) + ((100-rho_weight)/100) * (1 / min_eigen)
data_proper <- list("n" = n, "y" = y, "ee" = ee, "x" = x,
"adj" = adj, "num" = m, "mu_areas" = mu_areas,
"C"=C, "M"=M, "gamma"=rho)
covid.sim_proper <- bugs(data_proper, inits, parameters, model.file = "covid_car_proper.txt",
n.iter = 10000, n.chains = 3, n.burnin = 1000, n.thin = 1,
debug = T)
model_id <- "car_proper_rho_70"
### Modelo CAR Propio
{
covid.sim <- covid.sim_proper
save_definition(model_id, data_proper, inits, parameters, covid.sim)
}
#Cadena y resumen
{
out <- covid.sim$sims.list
out.sum <- covid.sim$summary
}
#DIC
{
out.dic<-covid.sim$DIC
print(out.dic)
}
#Beta
{
z<-out$beta[,2]
png(paste0("../results/", model_id, "/beta_2_summary.png"))
par(mfrow=c(2,2))
plot(z,type="l")
plot(cumsum(z)/(1:length(z)),type="l")
hist(z,freq=FALSE)
acf(z)
dev.off()
}
#Tabla resumen
{
out.b <- out.sum[grep("beta",rownames(out.sum)),c(1,3,7)]
out.b <- cbind(out.b,apply(out$beta,2,prob))
dimnames(out.b)[[2]][4] <- "prob"
print(out.b)
sink(paste0("../results/", model_id, "/beta_summary.txt"))
print(out.b)
sink()
}
#Predictions
{
out.yf <- out.sum[grep("yf",rownames(out.sum)),]
or <- order(y)
ymin <- min(y, out.yf[,c(1,3,7)])
ymax <- max(y, out.yf[,c(1,3,7)])
}
{
png(paste0("../results/", model_id, "/predictions.png"))
par(mfrow=c(1,1))
plot(y[or],ylim=c(ymin,ymax), xlab="", xaxt='n')
axis(1, at=1:n, labels=covid$Country[or], las=2)
lines(out.yf[or,1],lwd=2,col=2)
lines(out.yf[or,3],lty=2,col=2)
lines(out.yf[or,7],lty=2,col=2)
dev.off()
}
#R^2
{
png(paste0("../results/", model_id, "/r2.png"))
par(mfrow=c(1,1))
plot(y,out.yf[,1], ylab="Predicted y")
text(y,out.yf[,1], covid$Country)
abline(a=0, b=1)
dev.off()
R2<-(cor(y,out.yf[,1]))^2
print(R2)
sink(paste0("../results/", model_id, "/r2.txt"))
print(R2)
sink()
}
#phi
{
out.phi<-out.sum[grep("phi",rownames(out.sum)),]
out.est<-out.phi
k<-n
ymin<-min(out.est[,c(1,3,7)])
ymax<-max(out.est[,c(1,3,7)])
}
{
png(paste0("../results/", model_id, "/phi.png"))
par(mfrow=c(1,1))
plot(1:k,out.est[,1][or], ylab="",ylim=c(ymin,ymax),
xlab="", xaxt='n')
axis(1, at=1:n, labels=covid$Country[or], las=2)
segments(1:k,out.est[,3][or],1:k,out.est[,7][or])
abline(h=0,col="grey70")
title("Spatial Effect")
dev.off()
}
#theta
{
out.the<-out.sum[grep("the",rownames(out.sum)),]
out.est<-out.the
k<-n
ymin<-min(out.est[,c(1,3,7)])
ymax<-max(out.est[,c(1,3,7)])
}
{
png(paste0("../results/", model_id, "/theta.png"))
par(mfrow=c(1,1))
plot(1:k,out.est[,1][or],ylab="",ylim=c(ymin,ymax),
xlab="", xaxt='n')
axis(1, at=1:n, labels=covid$Country[or], las=2)
segments(1:k,out.est[,3][or],1:k,out.est[,7][or])
abline(h=0,col="grey70")
title("Individual Effect")
dev.off()
}
#Map of lambda
{
out.lam<-out.sum[grep("lam",rownames(out.sum)),]
plotvar<-out.lam[,1]
plotclr <- brewer.pal(nclr,"YlOrBr")
class <- classIntervals(plotvar, nclr, dataPrecision=2,style="quantile")
colcode <- findColours(class,plotclr)
covid.map <- sps
jpeg(paste0("../results/", model_id, "/predicted_smr.jpeg"), res = 65)
plot(covid.map, col = colcode)
legend(x_etiquetas, y_etiquetas, legend = names(attr(colcode, "table")),
fill = attr(colcode, "palette"), cex=1, bty="n")
text(mean_coords$x, mean_coords$y, mean_coords$Country)
text(mean_coords$x, mean_coords$y-3, plotvar |> round(2))
plot_arrows(region)
title(main="Smoothed SMR")
dev.off()
}
rho_weight <- 90 # Elegir del 0 al 100
rho <- (rho_weight/100) * (1 / max_eigen) + ((100-rho_weight)/100) * (1 / min_eigen)
y
x <- (covid$mean_net_migration |> scale(T,T))[,1]
x
data_proper <- list("n" = n, "y" = y, "ee" = ee, "x" = x,
"adj" = adj, "num" = m, "mu_areas" = mu_areas,
"C"=C, "M"=M, "gamma"=rho)
covid.sim_proper <- bugs(data_proper, inits, parameters, model.file = "covid_car_proper.txt",
n.iter = 10000, n.chains = 3, n.burnin = 1000, n.thin = 1,
debug = T)
y
model_id <- "car_proper_rho_90_xsc"
### Modelo CAR Propio
{
covid.sim <- covid.sim_proper
save_definition(model_id, data_proper, inits, parameters, covid.sim)
}
#Cadena y resumen
{
out <- covid.sim$sims.list
out.sum <- covid.sim$summary
}
#DIC
{
out.dic<-covid.sim$DIC
print(out.dic)
}
#Beta
{
z<-out$beta[,2]
png(paste0("../results/", model_id, "/beta_2_summary.png"))
par(mfrow=c(2,2))
plot(z,type="l")
plot(cumsum(z)/(1:length(z)),type="l")
hist(z,freq=FALSE)
acf(z)
dev.off()
}
#Tabla resumen
{
out.b <- out.sum[grep("beta",rownames(out.sum)),c(1,3,7)]
out.b <- cbind(out.b,apply(out$beta,2,prob))
dimnames(out.b)[[2]][4] <- "prob"
print(out.b)
sink(paste0("../results/", model_id, "/beta_summary.txt"))
print(out.b)
sink()
}
#Predictions
{
out.yf <- out.sum[grep("yf",rownames(out.sum)),]
or <- order(y)
ymin <- min(y, out.yf[,c(1,3,7)])
ymax <- max(y, out.yf[,c(1,3,7)])
}
{
png(paste0("../results/", model_id, "/predictions.png"))
par(mfrow=c(1,1))
plot(y[or],ylim=c(ymin,ymax), xlab="", xaxt='n')
axis(1, at=1:n, labels=covid$Country[or], las=2)
lines(out.yf[or,1],lwd=2,col=2)
lines(out.yf[or,3],lty=2,col=2)
lines(out.yf[or,7],lty=2,col=2)
dev.off()
}
#R^2
{
png(paste0("../results/", model_id, "/r2.png"))
par(mfrow=c(1,1))
plot(y,out.yf[,1], ylab="Predicted y")
text(y,out.yf[,1], covid$Country)
abline(a=0, b=1)
dev.off()
R2<-(cor(y,out.yf[,1]))^2
print(R2)
sink(paste0("../results/", model_id, "/r2.txt"))
print(R2)
sink()
}
#phi
{
out.phi<-out.sum[grep("phi",rownames(out.sum)),]
out.est<-out.phi
k<-n
ymin<-min(out.est[,c(1,3,7)])
ymax<-max(out.est[,c(1,3,7)])
}
{
png(paste0("../results/", model_id, "/phi.png"))
par(mfrow=c(1,1))
plot(1:k,out.est[,1][or], ylab="",ylim=c(ymin,ymax),
xlab="", xaxt='n')
axis(1, at=1:n, labels=covid$Country[or], las=2)
segments(1:k,out.est[,3][or],1:k,out.est[,7][or])
abline(h=0,col="grey70")
title("Spatial Effect")
dev.off()
}
#theta
{
out.the<-out.sum[grep("the",rownames(out.sum)),]
out.est<-out.the
k<-n
ymin<-min(out.est[,c(1,3,7)])
ymax<-max(out.est[,c(1,3,7)])
}
{
png(paste0("../results/", model_id, "/theta.png"))
par(mfrow=c(1,1))
plot(1:k,out.est[,1][or],ylab="",ylim=c(ymin,ymax),
xlab="", xaxt='n')
axis(1, at=1:n, labels=covid$Country[or], las=2)
segments(1:k,out.est[,3][or],1:k,out.est[,7][or])
abline(h=0,col="grey70")
title("Individual Effect")
dev.off()
}
#Map of lambda
{
out.lam<-out.sum[grep("lam",rownames(out.sum)),]
plotvar<-out.lam[,1]
plotclr <- brewer.pal(nclr,"YlOrBr")
class <- classIntervals(plotvar, nclr, dataPrecision=2,style="quantile")
colcode <- findColours(class,plotclr)
covid.map <- sps
jpeg(paste0("../results/", model_id, "/predicted_smr.jpeg"), res = 65)
plot(covid.map, col = colcode)
legend(x_etiquetas, y_etiquetas, legend = names(attr(colcode, "table")),
fill = attr(colcode, "palette"), cex=1, bty="n")
text(mean_coords$x, mean_coords$y, mean_coords$Country)
text(mean_coords$x, mean_coords$y-3, plotvar |> round(2))
plot_arrows(region)
title(main="Smoothed SMR")
dev.off()
}
#Map of lambda
{
out.lam<-out.sum[grep("lam",rownames(out.sum)),]
plotvar<-out.lam[,1]
plotclr <- brewer.pal(nclr,"YlOrBr")
class <- classIntervals(plotvar, nclr, dataPrecision=2,style="quantile")
colcode <- findColours(class,plotclr)
covid.map <- sps
png(paste0("../results/", model_id, "/predicted_smr.png"), res = 65)
plot(covid.map, col = colcode)
legend(x_etiquetas, y_etiquetas, legend = names(attr(colcode, "table")),
fill = attr(colcode, "palette"), cex=1, bty="n")
text(mean_coords$x, mean_coords$y, mean_coords$Country)
text(mean_coords$x, mean_coords$y-3, plotvar |> round(2))
plot_arrows(region)
title(main="Smoothed SMR")
dev.off()
}
#Map of lambda
{
out.lam<-out.sum[grep("lam",rownames(out.sum)),]
plotvar<-out.lam[,1]
plotclr <- brewer.pal(nclr,"YlOrBr")
class <- classIntervals(plotvar, nclr, dataPrecision=2,style="quantile")
colcode <- findColours(class,plotclr)
covid.map <- sps
png(paste0("../results/", model_id, "/predicted_smr.png"), res = 70)
plot(covid.map, col = colcode)
legend(x_etiquetas, y_etiquetas, legend = names(attr(colcode, "table")),
fill = attr(colcode, "palette"), cex=1, bty="n")
text(mean_coords$x, mean_coords$y, mean_coords$Country)
text(mean_coords$x, mean_coords$y-3, plotvar |> round(2))
plot_arrows(region)
title(main="Smoothed SMR")
dev.off()
}
data_proper_nox <- list("n" = n, "y" = y, "ee" = ee,
"adj" = adj, "num" = m, "mu_areas" = mu_areas,
"C"=C, "M"=M, "gamma"=rho)
inits_hierarchical <- function(){list(beta = rep(0,2),
mu.t = 0,
tau.t = 1,
theta = rep(0,n),
yf = rep(0,n))}
parameters_hierarchical <- c("beta", "lambda", "theta", "yf")
covid.sim_hierarchical <- bugs(data_hierarchical, inits_hierarchical, parameters_hierarchical,
model.file = "covid_hierarchical.txt",
n.iter = 10000, n.chains = 3, n.burnin = 1000, n.thin = 1,
debug = T)
covid.sim_proper_nox <- bugs(data_proper_nox, inits_proper_nox, parameters, model.file = "covid_car_proper_nox.txt",
n.iter = 10000, n.chains = 3, n.burnin = 1000, n.thin = 1,
debug = T)
model_id <- "car_proper_rho_90_nox"
### Modelo CAR Propio (Sin x)
{
covid.sim <- covid.sim_proper_nox
save_definition(model_id, data_proper_nox, inits_proper_nox, parameters, covid.sim)
}
#Cadena y resumen
{
out <- covid.sim$sims.list
out.sum <- covid.sim$summary
}
#DIC
{
out.dic<-covid.sim$DIC
print(out.dic)
}
#Beta
{
z<-out$beta[,2]
png(paste0("../results/", model_id, "/beta_2_summary.png"))
par(mfrow=c(2,2))
plot(z,type="l")
plot(cumsum(z)/(1:length(z)),type="l")
hist(z,freq=FALSE)
acf(z)
dev.off()
}
#Tabla resumen
{
out.b <- out.sum[grep("beta",rownames(out.sum)),c(1,3,7)]
out.b <- cbind(out.b,apply(out$beta,2,prob))
dimnames(out.b)[[2]][4] <- "prob"
print(out.b)
sink(paste0("../results/", model_id, "/beta_summary.txt"))
print(out.b)
sink()
}
#Predictions
{
out.yf <- out.sum[grep("yf",rownames(out.sum)),]
or <- order(y)
ymin <- min(y, out.yf[,c(1,3,7)])
ymax <- max(y, out.yf[,c(1,3,7)])
}
{
png(paste0("../results/", model_id, "/predictions.png"))
par(mfrow=c(1,1))
plot(y[or],ylim=c(ymin,ymax), xlab="", xaxt='n')
axis(1, at=1:n, labels=covid$Country[or], las=2)
lines(out.yf[or,1],lwd=2,col=2)
lines(out.yf[or,3],lty=2,col=2)
lines(out.yf[or,7],lty=2,col=2)
dev.off()
}
log_log_folders <- list.files("../results/", "log_log",
recursive=TRUE, include.dirs=TRUE)
log_log_folders <- log_log_folders[!(log_log_folders |> grepl(pattern = ".png"))]
log_log_dics <- list()
for (folder in log_log_folders){
dic <- read.table(paste0("../results/",folder,"/dic.txt"))
log_log_dics[folder] <- dic[2][[1]]
}
log_log_dics_df <-  log_log_dics |>
as_tibble() |>
t() |>
as_tibble() |>
rename(dic = V1) |>
mutate(model  = log_log_folders |>
gsub(pattern = "_log_log", replacement = "")) |>
select(c(model, dic)) |>
arrange(dic)
log_log_dics_df
#R^2
{
png(paste0("../results/", model_id, "/r2.png"))
par(mfrow=c(1,1))
plot(y,out.yf[,1], ylab="Predicted y")
text(y,out.yf[,1], covid$Country)
abline(a=0, b=1)
dev.off()
R2<-(cor(y,out.yf[,1]))^2
print(R2)
sink(paste0("../results/", model_id, "/r2.txt"))
print(R2)
sink()
}
#phi
{
out.phi<-out.sum[grep("phi",rownames(out.sum)),]
out.est<-out.phi
k<-n
ymin<-min(out.est[,c(1,3,7)])
ymax<-max(out.est[,c(1,3,7)])
}
{
png(paste0("../results/", model_id, "/phi.png"))
par(mfrow=c(1,1))
plot(1:k,out.est[,1][or], ylab="",ylim=c(ymin,ymax),
xlab="", xaxt='n')
axis(1, at=1:n, labels=covid$Country[or], las=2)
segments(1:k,out.est[,3][or],1:k,out.est[,7][or])
abline(h=0,col="grey70")
title("Spatial Effect")
dev.off()
}
#theta
{
out.the<-out.sum[grep("the",rownames(out.sum)),]
out.est<-out.the
k<-n
ymin<-min(out.est[,c(1,3,7)])
ymax<-max(out.est[,c(1,3,7)])
}
{
png(paste0("../results/", model_id, "/theta.png"))
par(mfrow=c(1,1))
plot(1:k,out.est[,1][or],ylab="",ylim=c(ymin,ymax),
xlab="", xaxt='n')
axis(1, at=1:n, labels=covid$Country[or], las=2)
segments(1:k,out.est[,3][or],1:k,out.est[,7][or])
abline(h=0,col="grey70")
title("Individual Effect")
dev.off()
}
#Map of lambda
{
out.lam<-out.sum[grep("lam",rownames(out.sum)),]
plotvar<-out.lam[,1]
plotclr <- brewer.pal(nclr,"YlOrBr")
class <- classIntervals(plotvar, nclr, dataPrecision=2,style="quantile")
colcode <- findColours(class,plotclr)
covid.map <- sps
png(paste0("../results/", model_id, "/predicted_smr.png"), res = 70)
plot(covid.map, col = colcode)
legend(x_etiquetas, y_etiquetas, legend = names(attr(colcode, "table")),
fill = attr(colcode, "palette"), cex=1, bty="n")
text(mean_coords$x, mean_coords$y, mean_coords$Country)
text(mean_coords$x, mean_coords$y-3, plotvar |> round(2))
plot_arrows(region)
title(main="Smoothed SMR")
dev.off()
}
folders
folders <- list.files("../results/", "",
recursive=TRUE, include.dirs=TRUE)
folders
folders <- list.files("../results/", "", recursive=TRUE, include.dirs=TRUE)
folders <- folders[!(folders |> grepl(pattern = ".png"))]
folders <- folders[!(folders |> grepl(pattern = "_log_log"))]
folders <- folders[!(folders |> grepl(pattern = "_div"))]
folders
folders <- list.files("../results/", "", include.dirs=TRUE)
folders
folders <- folders[!(folders |> grepl(pattern = ".png"))]
folders <- folders[!(folders |> grepl(pattern = "_log_log"))]
folders <- folders[!(folders |> grepl(pattern = "_div"))]
folders
dics <- list()
for (folder in folders){
dic <- read.table(paste0("../results/",folder,"/dic.txt"))
dics[folder] <- dic[2][[1]]
}
dics_df <-dics |>
as_tibble() |>
t() |>
as_tibble() |>
rename(dic = V1) |>
mutate(model  = folders)|>
select(c(model, dic)) |>
arrange(dic)
dics_df
log_log_dics_df
dics_df
