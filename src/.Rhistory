{
out.dic<-covid.sim$DIC
print(out.dic)
}
#Beta
{
z<-out$beta[,2]
png(paste0("../results/", model_id, "/beta_2_summary.png"))
par(mfrow=c(2,2))
plot(z,type="l")
plot(cumsum(z)/(1:length(z)),type="l")
hist(z,freq=FALSE)
acf(z)
dev.off()
}
#Tabla resumen
{
out.b <- out.sum[grep("beta",rownames(out.sum)),c(1,3,7)]
out.b <- cbind(out.b,apply(out$beta,2,prob))
dimnames(out.b)[[2]][4] <- "prob"
print(out.b)
sink(paste0("../results/", model_id, "/beta_summary.txt"))
print(out.b)
sink()
}
#Predictions
{
out.yf <- out.sum[grep("yf",rownames(out.sum)),]
or <- order(y)
ymin <- min(y, out.yf[,c(1,3,7)])
ymax <- max(y, out.yf[,c(1,3,7)])
}
{
png(paste0("../results/", model_id, "/predictions.png"))
par(mfrow=c(1,1))
plot(y[or],ylim=c(ymin,ymax), xlab="", xaxt='n')
axis(1, at=1:n, labels=covid$Country[or], las=2)
lines(out.yf[or,1],lwd=2,col=2)
lines(out.yf[or,3],lty=2,col=2)
lines(out.yf[or,7],lty=2,col=2)
dev.off()
}
#R^2
{
png(paste0("../results/", model_id, "/r2.png"))
par(mfrow=c(1,1))
plot(y,out.yf[,1], ylab="Predicted y")
text(y,out.yf[,1], covid$Country)
abline(a=0, b=1)
dev.off()
R2<-(cor(y,out.yf[,1]))^2
print(R2)
}
#phi
{
out.phi<-out.sum[grep("phi",rownames(out.sum)),]
out.est<-out.phi
k<-n
ymin<-min(out.est[,c(1,3,7)])
ymax<-max(out.est[,c(1,3,7)])
}
{
png(paste0("../results/", model_id, "/phi.png"))
par(mfrow=c(1,1))
plot(1:k,out.est[,1][or], ylab="",ylim=c(ymin,ymax),
xlab="", xaxt='n')
axis(1, at=1:n, labels=covid$Country[or], las=2)
segments(1:k,out.est[,3][or],1:k,out.est[,7][or])
abline(h=0,col="grey70")
title("Efecto espacial")
dev.off()
}
#theta
{
out.the<-out.sum[grep("the",rownames(out.sum)),]
out.est<-out.the
k<-n
ymin<-min(out.est[,c(1,3,7)])
ymax<-max(out.est[,c(1,3,7)])
}
{
png(paste0("../results/", model_id, "/theta.png"))
par(mfrow=c(1,1))
plot(1:k,out.est[,1][or],ylab="",ylim=c(ymin,ymax),
xlab="", xaxt='n')
axis(1, at=1:n, labels=covid$Country[or], las=2)
segments(1:k,out.est[,3][or],1:k,out.est[,7][or])
abline(h=0,col="grey70")
title("Efecto individual")
dev.off()
}
#Map of lambda
{
out.lam<-out.sum[grep("lam",rownames(out.sum)),]
plotvar<-out.lam[,1]
plotclr <- brewer.pal(nclr,"YlOrBr")
class <- classIntervals(plotvar, nclr, dataPrecision=2,style="quantile")
colcode <- findColours(class,plotclr)
covid.map <- sps
png(paste0("../results/", model_id, "/predicted_smr.png"))
plot(covid.map, col = colcode)
legend(x_etiquetas, y_etiquetas, legend = names(attr(colcode, "table")),
fill = attr(colcode, "palette"), cex=1, bty="n")
title(main="SMR")
dev.off()
}
{
plotvar <- y / ee
plotvar <- ifelse(plotvar == Inf, 0, plotvar)
plotclr <- brewer.pal(nclr,"YlOrBr")
class <- classIntervals(plotvar, nclr, dataPrecision=2,style="quantile")
colcode <- findColours(class,plotclr)
covid.map <- sps
plot(covid.map, col = colcode)
legend(x_etiquetas, y_etiquetas, legend = names(attr(colcode, "table")),
fill = attr(colcode, "palette"), cex=1, bty="n")
title(main="SMR")
}
data_hierarchical <- list("n" = n, "y" = y, "ee" = ee, "x" = x)
inits_hierarchical <- function(){list(beta = rep(0,2),
mu.t = 0,
tau.t = 1,
theta = rep(0,n),
yf = rep(0,n))}
data_hierarchical <- list("n" = n, "y" = y, "ee" = ee, "x" = x)
inits_hierarchical <- function(){list(beta = rep(0,2),
mu.t = 0,
tau.t = 1,
theta = rep(0,n),
yf = rep(0,n))}
parameters_hierarchical <- c("beta", "lambda", "theta", "yf")
covid.sim_hierarchical <- bugs(data_hierarchical, inits_hierarchical, parameters_hierarchical,
model.file = "covid_hierarchical.txt",
n.iter = 10000, n.chains = 3, n.burnin = 1000, n.thin = 1,
debug = T)
y
data_hierarchical
model_id <- "car_hierarchical_log_log"
### Modelo Hierarchical
{
covid.sim <- covid.sim_hierarchical
save_definition(model_id, data_hierarchical, inits_hierarchical,
parameters_hierarchical, covid.sim)
}
#Cadena y resumen
{
out <- covid.sim$sims.list
out.sum <- covid.sim$summary
}
#DIC
{
out.dic<-covid.sim$DIC
print(out.dic)
}
#Beta
{
z<-out$beta[,2]
png(paste0("../results/", model_id, "/beta_2_summary.png"))
par(mfrow=c(2,2))
plot(z,type="l")
plot(cumsum(z)/(1:length(z)),type="l")
hist(z,freq=FALSE)
acf(z)
dev.off()
}
#Tabla resumen
{
out.b <- out.sum[grep("beta",rownames(out.sum)),c(1,3,7)]
out.b <- cbind(out.b,apply(out$beta,2,prob))
dimnames(out.b)[[2]][4] <- "prob"
print(out.b)
sink(paste0("../results/", model_id, "/beta_summary.txt"))
print(out.b)
sink()
}
#Predictions
{
out.yf <- out.sum[grep("yf",rownames(out.sum)),]
or <- order(y)
ymin <- min(y, out.yf[,c(1,3,7)])
ymax <- max(y, out.yf[,c(1,3,7)])
}
{
png(paste0("../results/", model_id, "/predictions.png"))
par(mfrow=c(1,1))
plot(y[or],ylim=c(ymin,ymax), xlab="", xaxt='n')
axis(1, at=1:n, labels=covid$Country[or], las=2)
lines(out.yf[or,1],lwd=2,col=2)
lines(out.yf[or,3],lty=2,col=2)
lines(out.yf[or,7],lty=2,col=2)
dev.off()
}
#R^2
{
png(paste0("../results/", model_id, "/r2.png"))
par(mfrow=c(1,1))
plot(y,out.yf[,1], ylab="Predicted y")
text(y,out.yf[,1], covid$Country)
abline(a=0, b=1)
dev.off()
R2<-(cor(y,out.yf[,1]))^2
print(R2)
}
#phi
{
out.phi<-out.sum[grep("phi",rownames(out.sum)),]
out.est<-out.phi
k<-n
ymin<-min(out.est[,c(1,3,7)])
ymax<-max(out.est[,c(1,3,7)])
}
{
png(paste0("../results/", model_id, "/phi.png"))
par(mfrow=c(1,1))
plot(1:k,out.est[,1][or], ylab="",ylim=c(ymin,ymax),
xlab="", xaxt='n')
axis(1, at=1:n, labels=covid$Country[or], las=2)
segments(1:k,out.est[,3][or],1:k,out.est[,7][or])
abline(h=0,col="grey70")
title("Efecto espacial")
dev.off()
}
#theta
{
out.the<-out.sum[grep("the",rownames(out.sum)),]
out.est<-out.the
k<-n
ymin<-min(out.est[,c(1,3,7)])
ymax<-max(out.est[,c(1,3,7)])
}
#theta
{
out.the<-out.sum[grep("the",rownames(out.sum)),]
out.est<-out.the
k<-n
ymin<-min(out.est[,c(1,3,7)])
ymax<-max(out.est[,c(1,3,7)])
}
{
png(paste0("../results/", model_id, "/theta.png"))
par(mfrow=c(1,1))
plot(1:k,out.est[,1][or],ylab="",ylim=c(ymin,ymax),
xlab="", xaxt='n')
axis(1, at=1:n, labels=covid$Country[or], las=2)
segments(1:k,out.est[,3][or],1:k,out.est[,7][or])
abline(h=0,col="grey70")
title("Efecto individual")
dev.off()
}
#Map of lambda
{
out.lam<-out.sum[grep("lam",rownames(out.sum)),]
plotvar<-out.lam[,1]
plotclr <- brewer.pal(nclr,"YlOrBr")
class <- classIntervals(plotvar, nclr, dataPrecision=2,style="quantile")
colcode <- findColours(class,plotclr)
covid.map <- sps
png(paste0("../results/", model_id, "/predicted_smr.png"))
plot(covid.map, col = colcode)
legend(x_etiquetas, y_etiquetas, legend = names(attr(colcode, "table")),
fill = attr(colcode, "palette"), cex=1, bty="n")
title(main="SMR")
dev.off()
}
{
plotvar <- y / ee
plotvar <- ifelse(plotvar == Inf, 0, plotvar)
plotclr <- brewer.pal(nclr,"YlOrBr")
class <- classIntervals(plotvar, nclr, dataPrecision=2,style="quantile")
colcode <- findColours(class,plotclr)
covid.map <- sps
plot(covid.map, col = colcode)
legend(x_etiquetas, y_etiquetas, legend = names(attr(colcode, "table")),
fill = attr(colcode, "palette"), cex=1, bty="n")
title(main="SMR")
}
{
y <- log(covid$mean_fatalities + 1)
ee <- log(covid$mean_deathrate + 1)
}
x <- covid$mean_net_migration
data_proper <- list("n" = n, "y" = y, "ee" = ee, "x" = x,
"adj" = adj, "num" = m, "mu_areas" = mu_areas,
"C"=C, "M"=M, "gamma"=rho)
rho_weight <- 90 # Elegir del 0 al 100
rho <- (rho_weight/100) * (1 / max_eigen) + ((100-rho_weight)/100) * (1 / min_eigen)
data_proper <- list("n" = n, "y" = y, "ee" = ee, "x" = x,
"adj" = adj, "num" = m, "mu_areas" = mu_areas,
"C"=C, "M"=M, "gamma"=rho)
covid.sim_proper_normal <- bugs(data_proper, inits_normal_normal, parameters,
model.file = "covid_car_proper_normal.txt",
n.iter = 10000, n.chains = 3, n.burnin = 1000, n.thin = 1,
debug = T)
model_id <- "car_proper_normal_log_log_rho_90"
### Modelo CAR Propio con log(y) Normal
{
covid.sim <- covid.sim_proper_normal
save_definition(model_id, data_proper, inits_normal_normal, parameters, covid.sim)
}
#Cadena y resumen
{
out <- covid.sim$sims.list
out.sum <- covid.sim$summary
}
#DIC
{
out.dic<-covid.sim$DIC
print(out.dic)
}
#Beta
{
z<-out$beta[,2]
png(paste0("../results/", model_id, "/beta_2_summary.png"))
par(mfrow=c(2,2))
plot(z,type="l")
plot(cumsum(z)/(1:length(z)),type="l")
hist(z,freq=FALSE)
acf(z)
dev.off()
}
#Tabla resumen
{
out.b <- out.sum[grep("beta",rownames(out.sum)),c(1,3,7)]
out.b <- cbind(out.b,apply(out$beta,2,prob))
dimnames(out.b)[[2]][4] <- "prob"
print(out.b)
sink(paste0("../results/", model_id, "/beta_summary.txt"))
print(out.b)
sink()
}
#Predictions
{
out.yf <- out.sum[grep("yf",rownames(out.sum)),]
or <- order(y)
ymin <- min(y, out.yf[,c(1,3,7)])
ymax <- max(y, out.yf[,c(1,3,7)])
}
{
png(paste0("../results/", model_id, "/predictions.png"))
par(mfrow=c(1,1))
plot(y[or],ylim=c(ymin,ymax), xlab="", xaxt='n')
axis(1, at=1:n, labels=covid$Country[or], las=2)
lines(out.yf[or,1],lwd=2,col=2)
lines(out.yf[or,3],lty=2,col=2)
lines(out.yf[or,7],lty=2,col=2)
dev.off()
}
#R^2
{
png(paste0("../results/", model_id, "/r2.png"))
par(mfrow=c(1,1))
plot(y,out.yf[,1], ylab="Predicted y")
text(y,out.yf[,1], covid$Country)
abline(a=0, b=1)
dev.off()
R2<-(cor(y,out.yf[,1]))^2
print(R2)
}
#phi
{
out.phi<-out.sum[grep("phi",rownames(out.sum)),]
out.est<-out.phi
k<-n
ymin<-min(out.est[,c(1,3,7)])
ymax<-max(out.est[,c(1,3,7)])
}
{
png(paste0("../results/", model_id, "/phi.png"))
par(mfrow=c(1,1))
plot(1:k,out.est[,1][or], ylab="",ylim=c(ymin,ymax),
xlab="", xaxt='n')
axis(1, at=1:n, labels=covid$Country[or], las=2)
segments(1:k,out.est[,3][or],1:k,out.est[,7][or])
abline(h=0,col="grey70")
title("Efecto espacial")
dev.off()
}
#theta
{
out.the<-out.sum[grep("the",rownames(out.sum)),]
out.est<-out.the
k<-n
ymin<-min(out.est[,c(1,3,7)])
ymax<-max(out.est[,c(1,3,7)])
}
{
png(paste0("../results/", model_id, "/theta.png"))
par(mfrow=c(1,1))
plot(1:k,out.est[,1][or],ylab="",ylim=c(ymin,ymax),
xlab="", xaxt='n')
axis(1, at=1:n, labels=covid$Country[or], las=2)
segments(1:k,out.est[,3][or],1:k,out.est[,7][or])
abline(h=0,col="grey70")
title("Efecto individual")
dev.off()
}
#Map of lambda
{
out.lam<-out.sum[grep("lam",rownames(out.sum)),]
plotvar<-out.lam[,1]
plotclr <- brewer.pal(nclr,"YlOrBr")
class <- classIntervals(plotvar, nclr, dataPrecision=2,style="quantile")
colcode <- findColours(class,plotclr)
covid.map <- sps
png(paste0("../results/", model_id, "/predicted_smr.png"))
plot(covid.map, col = colcode)
legend(x_etiquetas, y_etiquetas, legend = names(attr(colcode, "table")),
fill = attr(colcode, "palette"), cex=1, bty="n")
title(main="SMR")
dev.off()
}
{
plotvar <- y / ee
plotvar <- ifelse(plotvar == Inf, 0, plotvar)
plotclr <- brewer.pal(nclr,"YlOrBr")
class <- classIntervals(plotvar, nclr, dataPrecision=2,style="quantile")
colcode <- findColours(class,plotclr)
covid.map <- sps
plot(covid.map, col = colcode)
legend(x_etiquetas, y_etiquetas, legend = names(attr(colcode, "table")),
fill = attr(colcode, "palette"), cex=1, bty="n")
title(main="SMR")
}
############## Resumen de resultados ##############
list.files("../results/", "log_log", recursive=TRUE, full.names=TRUE, include.dirs=TRUE)
############## Resumen de resultados ##############
list.files("../results/", "log_log", recursive=TRUE, include.dirs=TRUE)
############## Resumen de resultados ##############
log_log_files <- list.files("../results/", "log_log",
recursive=TRUE, include.dirs=TRUE)
log_log_files |> grepl(".png")
log_log_files
log_log_files |> grepl(pattern = ".png")
log_log_files[!(log_log_files |> grepl(pattern = ".png"))]
log_log_files <- log_log_files[!(log_log_files |> grepl(pattern = ".png"))]
log_log_files
log_log_folders <- list.files("../results/", "log_log",
recursive=TRUE, include.dirs=TRUE)
log_log_folders <- log_log_folders[!(log_log_folders |> grepl(pattern = ".png"))]
for (folder in log_log_folders)
log_log_folders <- list.files("../results/", "log_log",
recursive=TRUE, include.dirs=TRUE)
log_log_folders <- log_log_folders[!(log_log_folders |> grepl(pattern = ".png"))]
log_log_dics <- list()
for (folder in log_log_folders){
dic_file <- list.files(paste0("../results/",folder,"/"), "dic",
recursive=TRUE, include.dirs=TRUE)
}
dic_file
for (folder in log_log_folders){
dic_file <- list.files(paste0("../results/",folder,"/"), "dic.txt",
recursive=TRUE, include.dirs=TRUE)
}
dic_file
for (folder in log_log_folders){
dic <- read.table(paste0("../results/",folder,"/dic.txt"))
}
dic
dic[2]
dic[2][1]
dic[2][[1]]
for (folder in log_log_folders){
dic <- read.table(paste0("../results/",folder,"/dic.txt"))
log_log_dics[folder] <- dic[2][[1]]
}
log_log_dics
log_log_dics |> as_tibble()
log_log_dics |> as_tibble() |> ranspose(
)
log_log_dics |> as_tibble() |> transpose()
log_log_dics |> as_tibble() |> t()
log_log_dics |>
as_tibble() |>
t() |>
as_tibble(
)
log_log_dics |>
as_tibble() |>
t() |>
as_tibble()
log_log_dics |>
as_tibble() |>
t() |>
as_tibble() |>
rename(dic = V1)
log_log_folders
log_log_dics |>
as_tibble() |>
t() |>
as_tibble() |>
rename(dic = V1) |>
mutate(model  = log_log_folders)
log_log_dics |>
as_tibble() |>
t() |>
as_tibble() |>
rename(dic = V1) |>
mutate(model  = log_log_folders) |>
select(c(model, dic)) |>
arrange(dic)
log_log_folders
log_log_folders |> gsub("_log_log", "")
log_log_folders |> gsub(pattern = "_log_log", replacement = "")
log_log_dics |>
as_tibble() |>
t() |>
as_tibble() |>
rename(dic = V1) |>
mutate(model  = log_log_folders |>
gsub(pattern = "_log_log", replacement = "")) |>
select(c(model, dic)) |>
arrange(dic)
